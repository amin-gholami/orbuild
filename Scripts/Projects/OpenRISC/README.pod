
This is the source file from which the README file is generated.

This file is written in Perl's Plain Old Documentation (POD) format.
Run the following Perl commands to convert it to text or to HTML
for easy reading:

  podchecker README.pod  # Optional, check syntax.
  pod2text README.pod >README.txt

  # pod2html seems buggy, at least in perl v5.10.1, therefore
  # I'm using this long one-liner instead (with bash):
  perl -MPod::Simple::HTML  -e "\$p = Pod::Simple::HTML->new; \$p->index( 1 ); \$p->output_fh( *STDOUT{IO} ); \$p->force_title('orbuild OpenRISC project'); \$p->parse_file('README.pod');"  >README.html

This file is best edited with emacs module pod-mode, available in CPAN.
However, the POD syntax is quite simple and can be edited with a standard text editor.

=pod

=head1 OpenRISC I<< orbuild >> project


=head2 Prerequisites

=head3 Ubuntu/Debian Linux

Under Ubuntu/Debian systems, the following command installs all prerequisites at once:

  sudo apt-get install gcc g++ libmpfr-dev libgmp3-dev libmpc-dev libzip-dev texlive flex bison texinfo libncurses-dev gperf dejagnu

=head3 Cygwin

Some of the required package names are:

  tetex
  libgmp-devel
  libmpfr-devel
  libmpc-devel
  wget
  gcc
  libncurses-devel
  ioperm
  libusb-win32
  flex
  bison

=head2 Components built

This is what the project currently downloads, builds and tests:

=over

=item * OpenCores' OpenRISC repositories

A collection of repositories often used together with OpenRISC designs,
they are mostly Subversion repositories from L<< http://OpenCores.org/ >> .

=item * OpenCores' OpenRISC Toolchain

This includes the I<< or1ksim >> simulator, Binutils, Newlib, GCC and GDB. Some of the self-tests are also run after building.

A full I<< diskcheck >> is performed for I<< or1ksim >>.

At the moment only the bare-metal version (without Linux support) is built.

Peter Gavin's OpenRISC toolchain is also built. The Binutils test suite is also run for this toolchain.

Most of those components are installed together in a combined I<< ToolchainOr32 >> subdirectory.

The F<< bld-all.sh >> script, which automatically builds most of the components together, is also run separately.

=item * ORPSoC v2

The I<< rtl-tests >> are run. The PDF documentation is also built.

=item * Peter Gavin's OpenRISC toolchain

=item * MinSoC

The MinSoC repository is downloaded. MinSoC's automatic installation script is run, which downloads
the same MinSoC repository again (among many other tools).

=item * Icarus Verilog

Taken from git L<< git://github.com/steveicarus/iverilog.git >> , stable branch I<< v0_9-branch >> ,
so it may not be as stable as an officially-released version.

This step is not strictly necessary, an officially-released version will also do.

=item * Verilator

Taken from git head at L<< http://git.veripool.org/git/verilator >> , so it may not be as stable
as an officially-released version.

This step is not strictly necessary, an officially-released version will also do.

=back

=head1 License

Copyright (C) R. Diez 2011,  rdiezmail-openrisc at yahoo.de

The I<< orbuild >> source code is released under the GPL 3 license.

This document is released under the Creative Commons Attribution-ShareAlike 3.0 Unported (CC BY-SA 3.0) license.

=cut
