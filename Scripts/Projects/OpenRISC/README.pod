
This is the source file from which the README file is generated.

This file is written in Perl's Plain Old Documentation (POD) format.
Run the following Perl commands to convert it to text or to HTML
for easy reading:

  podchecker README.pod  # Optional, check syntax.
  pod2text README.pod >README.txt

  # pod2html seems buggy, at least in perl v5.10.1, therefore
  # I'm using this long one-liner instead (with bash):
  perl -MPod::Simple::HTML  -e "\$p = Pod::Simple::HTML->new; \$p->index( 1 ); \$p->output_fh( *STDOUT{IO} ); \$p->force_title('orbuild OpenRISC project'); \$p->parse_file('README.pod');"  >README.html

This file is best edited with emacs module pod-mode, available in CPAN.
However, the POD syntax is quite simple and can be edited with a standard text editor.

=pod

=head1 OpenRISC build project

This is an I<< orbuild project >>, see the main I<< orbuild system >> documentation on how to run it.

=head2 Prerequisites

=head3 Ubuntu/Debian Linux

Under Ubuntu/Debian systems, the following command installs all prerequisites at once:

  sudo apt-get install gcc g++ libmpfr-dev libgmp3-dev libmpc-dev libzip-dev texlive flex bison texinfo libncurses-dev gperf dejagnu verilator iverilog

If your system does not have a package with Verilator or Icarus Verilog, you can enable building them in the Makefile, see below.

=head3 Cygwin

Some of the required package names are:

  tetex
  libgmp-devel
  libmpfr-devel
  libmpc-devel
  wget
  gcc
  libncurses-devel
  ioperm
  libusb-win32
  flex
  bison

Cygwin does not have a package with Verilator or Icarus Verilog. If you have not installed them manually,
you'll have to enable building them in the Makefile, see below.

=head2 Components built

This is what the project currently downloads, builds and tests. You can choose what steps are performed
by editing the F<< Makefile >> next to this README file, see the I<< ENABLE_xxx >> constants at the beginning.

=over

=item * OpenCores' OpenRISC repositories

A collection of repositories often used together with OpenRISC designs,
they are mostly Subversion repositories from L<< http://OpenCores.org/ >> .

=item * OpenCores' OpenRISC Toolchain

This includes the I<< or1ksim >> simulator, Binutils, Newlib, GCC and GDB. 

At the moment only the bare-metal version (without Linux support) is built.

Most of those components are installed together in a combined I<< ToolchainOr32Bare >> subdirectory.

Optional steps are:

=over

=item * Some of the self-tests are also run after building their respective components.

=item * A full I<< diskcheck >> is performed for I<< or1ksim >>.

=item * The F<< bld-all.sh >> script, which automatically builds most of the components together, is also run separately.

=back

=item * ORPSoC v2

Some basic linting is performed on the Verilog source code.
Several combinations of top-level modules (CPU core only, SoC, test bench)
and CPU core configurations (with minimal or maximal features enabled) are linted separately.

The PDF documentation is built out of the TeX sources.

An optional step is to run the I<< rtl-tests >>.

=item * Peter Gavin's OpenRISC toolchain

Taken from git head at git://github.com/pgavin

Both the "bare" toolchain with Newlib and the Linux toolchain with uClibc are built.

The Binutils test suite is also run for the "bare" toolchain.

GDB 7.2 from OpenCores.org gets built with the Linux toolchain.

An optional step is to run the Binutils checks.

=item * MinSoC

This step is optional. The MinSoC repository is downloaded. MinSoC's automatic installation script is run, which downloads
the same MinSoC repository again (among many other tools).

=item * Icarus Verilog

Taken from git L<< git://github.com/steveicarus/iverilog.git >> , stable branch I<< v0_9-branch >> ,
so it may not be as stable as an officially-released version.

This step is optional. If not enabled, the currently installed Icarus Verilog will be used.

=item * Verilator

Taken from git head at L<< http://git.veripool.org/git/verilator >> , so it may not be as stable
as an officially-released version.

This step is optional. If not enabled, the currently installed Verilator will be used.

=back

=head1 License

Copyright (C) R. Diez 2011,  rdiezmail-openrisc at yahoo.de

The I<< orbuild >> source code is released under the GPL 3 license.

This document is released under the Creative Commons Attribution-ShareAlike 3.0 Unported (CC BY-SA 3.0) license.

=cut
