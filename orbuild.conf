
# Configuration file for the orbuild system.

RotateSlotCount  = 2

# The orbuild framework is generic enough to be repurposed for projects other than OpenRISC,
# with this setting you can specify your own project makefile.
# Note that the project's top-level path is deduced from this filename,
# so the makefile should live at the top of the project's directory structure.
# Makefile       = Scripts/Projects/ExampleProject/Makefile
Makefile         = Scripts/Projects/OpenRISC/Makefile


# Building in parallel can dramatically reduce the build time. However,
# if your build process requires human interaction (for example, when Subversion prompts for a login and password),
# then you should disable the parallel build, otherwise the output will be interleaved
# and you may not see the interactive prompts clearly.
# This setting can be overridden with command-line switch --interactive .
ParallelBuild    = yes

# Set to 'yes' if your build requires interaction (for example, when Subversion prompts for a login and password).
# This setting is incompatible with ParallelBuild, not because it's strictly illegal, but
# because it does not normally make sense. See ParallelBuild for more information.
# This setting can be overridden with command-line switch --interactive .
InteractiveBuild = no

# You may to build as much as possible, instead of stopping on the first error.
StopOnFirstError = no

# The VisualNotification action runs when the build finishes, whether successful or not.
# Use option --test-visual-notification in order to test this setting without building anything.
#
# Example 1, notify with gxmessage under Linux, wait for the user to close the notification window.
#   gxmessage has the shortcoming that closing the window without pressing a button
#   generates the same exit code as any other error. The "; true" here
#   ignores any non-zero exit code.
#
#     VisualNotification = gxmessage -title "Build finished" "Build finished"; true
#
# Example 2, open the generated HTML report with Firefox under Linux, but do not wait for the user to close it (leave it running in the background):
#   The "</dev/null" suffix prevents file "nohup.out" from being created every time.
#
#     VisualNotification = nohup firefox -new-window "$ORBUILD_FINAL_REPORT_FILENAME" 2>/dev/null >/dev/null
#
# Example 3, open the generated HTML report with Firefox under Windows:
#
#     VisualNotification = cygstart "$ORBUILD_FINAL_REPORT_FILENAME"
#
VisualNotification = 

# The PostBuildAction runs only when the build is successful.
PostBuildAction = 

DownloadCacheDir = DownloadCache/
RepositoriesDir  = Repositories/
BuildsDir        = Builds/
